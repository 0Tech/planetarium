#!/bin/sh

set -xe

. @CMAKE_SOURCE_DIR@/fixture/util/common.sh
. @CMAKE_SOURCE_DIR@/fixture/util/service.sh

assert_variables NUM_CHAINS \
				 NUM_REGIONS \
				 NUM_SENTRIES \
				 PROJECT_NAME

setup_ssh_host() {
	local service=$1
	local outdir=$2

	# reconfigure ssh server
	service_exec $service "dpkg-reconfigure openssh-server"

	service_exec $service "mkdir -p ~/.ssh && echo $admin_pubkey | tee ~/.ssh/authorized_keys"
	_hostname=$(printf $service | cut -d . -f 1)

	echo $_hostname $(service_exec $service "cat /etc/ssh/ssh_host_ed25519_key.pub | cut -d ' ' -f 1-2") >$outdir/$service.txt
}

exchange_ssh_pubkeys() {
	local region_id=$1
	local chain_id=$2

	local admin=$(service_name administrator $region_id $chain_id)

	# generate an ssh key
	service_exec $admin "ssh-keygen -t ed25519 -N '' -f ~/.ssh/id_ed25519"
	local admin_pubkey=$(service_exec $admin "cat ~/.ssh/id_ed25519.pub")

	# distribute the ssh key and collect host keys
	local pending_pids=
	local host_pubkeys=$(mktemp -d)
	for _worker in $(get_services _ $region_id $chain_id | grep -Ev '^administrator\.')
	do
		setup_ssh_host $_worker $host_pubkeys &
		pending_pids="$pending_pids $!"
	done
	wait_pids $pending_pids

	service_exec $admin "printf \"$(cat $host_pubkeys/*.txt)\" >~/.ssh/known_hosts"
	rm -rf $host_pubkeys
}

script_dir=$(dirname $(realpath $0))
# $script_dir/generate-compose.py --name $PROJECT_NAME --chains $NUM_CHAINS --regions $NUM_REGIONS --sentries $NUM_SENTRIES -o $PROJECT_NAME.yml
$script_dir/generate-compose.py --chains $NUM_CHAINS --regions $NUM_REGIONS --sentries $NUM_SENTRIES -o compose.yml

docker-compose -p $PROJECT_NAME up --detach --remove-orphans

# generate & distribute ssh pubkeys
for _ci in $(seq 0 $(expr $NUM_CHAINS - 1))
do
	_chain_id=$(chain_name $_ci)
	for _ri in $(seq 0 $(expr $NUM_REGIONS - 1))
	do
		_region_id=$(region_name $_ri)

		exchange_ssh_pubkeys $_region_id $_chain_id &
		pending_pids="$pending_pids $!"
	done
done

# install ansible playbooks to the admin nodes
playbook_dir=@CMAKE_SOURCE_DIR@/playbook
rm -rf inventory
@CMAKE_CURRENT_SOURCE_DIR@/generate-inventory.py --sentries $NUM_SENTRIES -o inventory
for _ci in $(seq 0 $(expr $NUM_CHAINS - 1))
do
	_chain_id=$(chain_name $_ci)
	for _ri in $(seq 0 $(expr $NUM_REGIONS - 1))
	do
		_region_id=$(region_name $_ri)

		_admin=$(service_name administrator $_region_id $_chain_id)

		# install ansible configs
		service_push $_admin $playbook_dir/. /root/
		service_push $_admin inventory /root/
	done
done

wait_pids $pending_pids
