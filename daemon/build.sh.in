#!/bin/sh

set -e

. @CMAKE_SOURCE_DIR@/util/docker.sh

if [ -n "$VERBOSE" ]
then
	set -x
else
	exec 1>/dev/null 2>&1
fi

dockerfile=$1
[ -n "$dockerfile" ]

rel_source=$2
[ -n "$rel_source" ]

source=$(realpath "$rel_source")
target=$(realpath .)

[ -d "$source" ]

image=@APP_NAME@-daemon:build
docker image rm -f $image 2>/dev/null

go_version=$(sed -En 's/^go ([.[:digit:]]+)$/\1/p' "$source"/go.mod)
[ -n "$go_version" ]
golang_tag=$(guess_image_tag golang $go_version)
[ -n "$golang_tag" ]

workdir=$(mktemp --dry-run -d)
docker build --force-rm -t $image -f "$dockerfile" \
	   --build-arg TAG=$golang_tag \
	   --build-arg DAEMON_NAME=@DAEMON_NAME@ \
	   --build-arg WORKDIR=$workdir \
	   "$source"

docker run --rm -t \
	   --mount type=bind,source="$target",target=/target \
	   $image cp $workdir/bundle.tar.gz /target/

docker image rm -f $image
