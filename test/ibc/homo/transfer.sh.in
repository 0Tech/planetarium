#!/bin/sh

set -e

. @CMAKE_SOURCE_DIR@/util/common.sh
. @CMAKE_SOURCE_DIR@/util/app.sh
. @CMAKE_SOURCE_DIR@/test/util/service.sh
. @CMAKE_SOURCE_DIR@/test/util/app.sh
. @CMAKE_SOURCE_DIR@/test/util/relayer.sh

assert_variables A_CHAIN_ID \
				 B_CHAIN_ID \
				 APP

this_relayer_exec() {
	local command=$1

	relayer_exec $A_CHAIN_ID $B_CHAIN_ID "$command"
}

# create connection
result=$(create_connection $A_CHAIN_ID $B_CHAIN_ID | tail -n 1 | jq -c .result)
a_connection_id=$(echo $result | jq -er .a_side.connection_id)

# create channel
port=transfer
result=$(create_channel $port $a_connection_id $A_CHAIN_ID $B_CHAIN_ID | tail -n 1 | jq -c .result)
a_channel_id=$(echo $result | jq -er .a_side.channel_id)
b_channel_id=$(echo $result | jq -er .b_side.channel_id)

# send tx
this_relayer_exec "hermes --json tx ft-transfer --amount 1 --denom @TEST_STATE_BOND_DENOM@ --src-channel $a_channel_id --src-port $port --src-chain $A_CHAIN_ID --dst-chain $B_CHAIN_ID --timeout-height-offset 10"

# receive tx
this_relayer_exec "hermes --json tx packet-recv --src-channel $a_channel_id --src-port $port --src-chain $A_CHAIN_ID --dst-chain $B_CHAIN_ID" | tail -n 1

# ack tx
this_relayer_exec "hermes --json tx packet-ack --src-channel $b_channel_id --src-port $port --src-chain $B_CHAIN_ID --dst-chain $A_CHAIN_ID" | tail -n 1
