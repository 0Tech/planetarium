#!/bin/sh

set -e

. @CMAKE_SOURCE_DIR@/util/common.sh
. @CMAKE_SOURCE_DIR@/util/app.sh
. @CMAKE_SOURCE_DIR@/test/util/service.sh

assert_variables CHAIN_ID \
				 APP \
				 VERSION

assert_app_name $(app_name $APP)

upgrade_name=rolling

get_height() {
	service_exec_as_user $(service_name seat $(region_name 0) $CHAIN_ID) cosmovisor height
}

get_bundle_path() {
	printf @APP_PREPARATION_DIR@/request/$APP/$VERSION/bundle.tar.gz
}

download_bundle() {
	for _admin in $(get_control_services $CHAIN_ID)
	do
		service_push $_admin $(get_bundle_path) /root/$upgrade_name.tar.gz
	done
}

upgrade_one_half() {
	local num_regions=$(get_control_services $CHAIN_ID | wc -l)
	local num_upgrade_regions=$(expr '(' $num_regions + 1 ')' / 2)
	for _ri in $(seq 0 $(expr $num_upgrade_regions - 1))
	do
		_region_id=$(region_name $_ri)

		_admin=$(service_name administrator $_region_id $CHAIN_ID)

		# upgrade the region
		service_exec $_admin "cd && ansible-playbook -i inventory upgrade.yml \\
-e src=$upgrade_name.tar.gz"
	done
}

download_bundle

upgrade_height=$(expr $(get_height) + 20)
upgrade_one_half

# wait for the upgrade
while true
do
	if [ "$(get_height)" -ge $(expr $upgrade_height + 1) ] 2>/dev/null
	then
		break
	fi

	sleep 1
done
