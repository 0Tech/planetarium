#!/bin/sh

set -e

. @CMAKE_SOURCE_DIR@/util/common.sh
. @CMAKE_SOURCE_DIR@/test/util/service.sh

assert_variables CHAIN_ID

# stop the sentries
admins=$(get_control_services $CHAIN_ID)
for _admin in $admins
do
	service_exec $_admin "cd && ansible -i inventory sentry -m ansible.builtin.service -a 'name=cosmovisor enabled=true state=stopped'"
done

# wait for the sentries to be stopped
healthy_sentries=$(get_services $CHAIN_ID _ sentry)
while [ -n "$healthy_sentries" ]
do
	_sentries="$healthy_sentries"
	healthy_sentries=
	for _sentry in $_sentries
	do
		if [ "$(service_health $_sentry)" = healthy ]
		then
			healthy_sentries="$healthy_sentries $_service"
			sleep 1
		fi
	done
done

# confirm no block generations
healthy_validators=$(get_services $CHAIN_ID _ validator)
if [ $(echo "$healthy_validators" | wc -l) -gt 1 ]
then
	while [ -n "$healthy_validators" ]
	do
		_validators="$healthy_validators"
		healthy_validators=
		for _validator in $_validators
		do
			if [ "$(service_health $_validator)" = healthy ]
			then
				healthy_validators="$healthy_validators $_service"
				sleep 1
			fi
		done
	done
fi

# start the sentries
for _admin in $admins
do
	service_exec $_admin "cd && ansible -i inventory sentry -m ansible.builtin.service -a 'name=cosmovisor enabled=true state=started'"
done

# wait for the sentry recovery
unhealthy_sentries=$(get_services $CHAIN_ID _ sentry)
while [ -n "$unhealthy_sentries" ]
do
	_sentries="$unhealthy_sentries"
	unhealthy_sentries=
	for _sentry in $_sentries
	do
		if [ "$(service_health $_sentry)" != healthy ]
		then
			unhealthy_sentries="$unhealthy_sentries $_service"
			sleep 1
		fi
	done
done

# confirm block generations
unhealthy_validators=$(get_services $CHAIN_ID _ validator)
while [ -n "$unhealthy_validators" ]
do
	_validators="$unhealthy_validators"
	unhealthy_validators=
	for _validator in $_validators
	do
		if [ "$(service_health $_validator)" != healthy ]
		then
			unhealthy_validators="$unhealthy_validators $_service"
			sleep 1
		fi
	done
done
