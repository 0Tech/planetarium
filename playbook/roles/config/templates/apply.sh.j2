#!/bin/sh

set -e

# ansible.builtin.template
DAEMON_HOME={{ daemon_home }}
REGION_ID={{ region_id }}
TYPE={{ type }}

PRIVATE_IP={{ ansible_local.config.private_ip }}
PUBLIC_IP={{ ansible_local.config.public_ip }}
VALIDATOR_NODE_ID={{ validator.node_id }}
VALIDATOR_PRIVATE_IP={{ validator.private_ip }}

replace_toml() {
	local file=$1
	local key=$2
	local value=$3

	sed -Ei $file -e 's#^'$key'[[:blank:]]*=.*$#'$key' = '$value'#'
}

p2p_port=26656

## update config.toml ##
# seed settings
seeds_dir=seeds
if [ $TYPE = seed ]
then
	# replace_toml config/config.toml seed_mode true

	_seeds=
	for _region_id in $(ls -1 $seeds_dir 2>/dev/null)
	do
		if [ $_region_id = $REGION_ID ]
		then
			continue
		fi

		_seed_dir=$seeds_dir/$_region_id
		_seed_node_id=$(jq -er .node_id $_seed_dir/daemon.fact)
		_seed_ip=$(jq -er .public_ip $_seed_dir/config.fact)
		_seeds=$_seeds,$_seed_node_id@$_seed_ip:$p2p_port
	done
	_seeds=$(echo $_seeds | cut -c 2-)

	replace_toml $DAEMON_HOME/config/config.toml seeds '"'$_seeds'"'
elif [ $TYPE != validator ]
then
	_seed_dir=$seeds_dir/$REGION_ID
	_seed_node_id=$(jq -er .node_id $_seed_dir/daemon.fact)
	_seed_ip=$(jq -er .private_ip $_seed_dir/config.fact)
	_seeds=$_seed_node_id@$_seed_ip:$p2p_port
	replace_toml $DAEMON_HOME/config/config.toml seeds '"'$_seeds'"'
fi

if [ $TYPE = sentry ]
then
	replace_toml $DAEMON_HOME/config/config.toml private_peer_ids '"'$VALIDATOR_NODE_ID'"'

	_persistent_peers=$VALIDATOR_NODE_ID@$VALIDATOR_PRIVATE_IP:$p2p_port
	replace_toml $DAEMON_HOME/config/config.toml persistent_peers '"'$_persistent_peers'"'
elif [ $TYPE = validator ]
then
	replace_toml $DAEMON_HOME/config/config.toml persistent_peers '""'
fi
