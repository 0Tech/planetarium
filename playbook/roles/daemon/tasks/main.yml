- name: Gather local facts (cosmovisor)
  ansible.builtin.set_fact:
    user: "{{ ansible_local.cosmovisor.user }}"
    daemon_name: "{{ ansible_local.cosmovisor.daemon_name }}"
    daemon_home: "{{ ansible_local.cosmovisor.daemon_home }}"
- name: Check installation state
  ansible.builtin.file:
    path: "{{ daemon_home }}/cosmovisor"
    state: "{{ 'absent' if state == 'absent' else 'directory' }}"
  check_mode: true
  register: installation
- name: End host if no works needed
  when: not installation.changed
  ansible.builtin.meta: end_host
- name: Create facts directory
  ansible.builtin.file:
    path: /etc/ansible/facts.d
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: u=rwx,g=rx,o=rx
- name: Set work directory
  ansible.builtin.tempfile:
    state: directory
  register: work
- name: Create work directory
  ansible.builtin.file:
    path: "{{ work.path }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: u=rwx,g=rx,o=rx
- name: Install height querier
  ansible.builtin.template:
    src: height.j2
    dest: /usr/local/bin/height
    mode: u=rwx,g=rx,o=rx
- name: Push binary
  ansible.builtin.copy:
    src: "{{ src }}"
    dest: "{{ work.path }}/"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: u=rwx,g=rx,o=rx
- name: Prepare install script
  ansible.builtin.template:
    src: install.sh.j2
    dest: "{{ work.path }}/install.sh"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: u=rw,g=r,o=r
- name: Install daemon
  become: true
  become_user: "{{ user }}"
  ansible.builtin.shell:
    cmd: sh install.sh
    chdir: "{{ work.path }}"
- name: Prepare static config script
  ansible.builtin.template:
    src: configure.sh.j2
    dest: "{{ work.path }}/configure.sh"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: u=rw,g=r,o=r
- name: Configure daemon (static)
  become: true
  become_user: "{{ user }}"
  ansible.builtin.shell:
    cmd: sh configure.sh
    chdir: "{{ work.path }}"
- name: Remove work directory
  ansible.builtin.file:
    path: "{{ work.path }}"
    state: absent
