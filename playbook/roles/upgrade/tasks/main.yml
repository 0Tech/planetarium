- name: Check optional args
  run_once: true
  delegate_to: localhost
  ansible.builtin.set_fact:
    daemon_user: "{{ daemon_user | default('cosmovisor') }}"
- name: Set upgrade path
  run_once: true
  delegate_to: localhost
  ansible.builtin.set_fact:
    path: "{{ [daemon_home, 'cosmovisor', ((['upgrades', (upgrade_name | lower)] | join('/')) if upgrade_name is defined else 'current')] | join('/') }}"
- name: Check installation state
  ansible.builtin.file:
    path: "{{ path }}"
    state: directory
  check_mode: true
  register: installation
- name: End play if no works needed
  when:
  - force is undefined or not force
  - upgrade_name is defined
  - not installation.changed
  ansible.builtin.meta: end_play
- name: Stop cosmovisor
  when: upgrade_name is not defined
  community.general.runit:
    name: cosmovisor
    enabled: false
- name: Create binary path
  ansible.builtin.file:
    path: "{{ path }}/bin"
    state: directory
- name: Push archive
  ansible.builtin.unarchive:
    src: "{{ src }}"
    dest: "{{ path }}/"
    owner: "{{ daemon_user }}"
    group: "{{ daemon_user }}"
    mode: u=rwx,g=rx,o=rx
- name: Relocate binary
  ansible.builtin.copy:
    remote_src: true
    src: "{{ path }}/{{ daemon_name }}"
    dest: "{{ path }}/bin/"
    owner: "{{ daemon_user }}"
    group: "{{ daemon_user }}"
    mode: u=rwx,g=rx,o=rx
- name: Start cosmovisor
  when: upgrade_name is not defined
  community.general.runit:
    name: cosmovisor
    enabled: true
    state: started
