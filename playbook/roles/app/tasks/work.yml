- name: Create facts directory
  ansible.builtin.file:
    path: /etc/ansible/facts.d
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: u=rwx,g=rx,o=rx
- name: Set work directory
  ansible.builtin.tempfile:
    state: directory
  register: work
- name: Create work directory
  ansible.builtin.file:
    path: "{{ work.path }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: u=rwx,g=rx,o=rx
- name: Install height querier
  ansible.builtin.template:
    src: height.j2
    dest: /usr/local/bin/height
    mode: u=rwx,g=rx,o=rx
- name: Push binary
  ansible.builtin.copy:
    src: "{{ src }}"
    dest: "{{ work.path }}/"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: u=rwx,g=rx,o=rx
- name: Prepare install script
  ansible.builtin.template:
    src: install.sh.j2
    dest: "{{ work.path }}/install.sh"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: u=rwx,g=rx,o=rx
- name: Install app
  become: true
  become_user: "{{ user }}"
  ansible.builtin.shell:
    cmd: ./install.sh
    chdir: "{{ work.path }}"
- name: Prepare static config script
  ansible.builtin.template:
    src: configure.py.j2
    dest: "{{ work.path }}/configure.py"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: u=rwx,g=rx,o=rx
- name: Configure app (static)
  become: true
  become_user: "{{ user }}"
  ansible.builtin.shell:
    cmd: ./configure.py
    chdir: "{{ work.path }}"
- name: Remove work directory
  ansible.builtin.file:
    path: "{{ work.path }}"
    state: absent
